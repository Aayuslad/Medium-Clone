// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  email      String      @unique
  name       String      @unique
  password   String
  bio        String      @default("")
  about      String      @default("")
  profileImg String      @default("")
  posts      Post[] // Establishing a one-to-many relationship
  claps      Clap[]
  savedPosts SavedPost[] // Establishing a many-to-many relationship with saved posts
  followers   User[]       @relation("UserFollows") // Users who follow this user
  following   User[]       @relation("UserFollows") // Users this user follows
  followersCount   Int         @default(0) // Count of followers
  followingCount   Int         @default(0) // Count of users followed by this user
}

model Post {
  id          String      @id @default(uuid())
  title       String      @default("")
  content     String      @default("")
  description String      @default("")
  coverImage  String      @default("")
  postedOn    DateTime
  published   Boolean     @default(false)
  author      User        @relation(fields: [authorId], references: [id])
  authorId    String
  topics      Topics[]
  claps       Clap[] 
  savedBy     SavedPost[]
}

model Clap {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String // Foreign key to User
  post   Post   @relation(fields: [postId], references: [id])
  postId String // Foreign key to Post
}

model Topics {
  id    String @id @default(uuid())
  topic String @unique
  posts Post[]
}

model SavedPost {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String // Foreign key to User
  post      Post     @relation(fields: [postId], references: [id])
  postId    String // Foreign key to Post
  createdAt DateTime @default(now())
}